{"version":3,"sources":["Components/AddForm.js","Components/Update.js","Components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["Add","setContacts","useState","first","setFirst","second","setSecond","number","setNumber","handleInputChange","event","target","value","name","handleSubmit","a","preventDefault","window","alert","new_contact","fetch","method","headers","body","JSON","stringify","ok","console","log","Accept","then","response","json","data","catch","err","Form","onSubmit","Field","Input","required","type","placeholder","onChange","style","textAlign","id","Update","contact","setUpdate","firstname","newFirst","setNewFirst","secondname","newSecond","setNewSecond","newNumber","setNewNumber","handleSubmitUpdate","updated_contact","Contact","update","nameClicked","setNameClicked","handleDelete","confirm","Container","onClick","marginRight","marginBottom","App","contacts","useEffect","className","Grid","centered","columns","Column","Header","dividing","margintop","length","map","List","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.818c031b.chunk.js","sourcesContent":["import React, {useState } from \"react\";\nimport {Form, Input } from \"semantic-ui-react\";\n\nconst Add = ({setContacts}) => {\n  const [first, setFirst] = useState(\"\");\n  const [second, setSecond] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  \n  const handleInputChange = (event) => {\n    const {\n      target: { value, name },\n    } = event;\n    if (name === \"first\") {\n      setFirst(value);\n    } else if (name === \"second\") {\n      setSecond(value);\n    } else {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if(!first || !number){\n      window.alert(\"First name and Number are required\")\n      return;\n    }\n    const new_contact = { first, second, number };\n    const reponse = await fetch(\"/api/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(new_contact),\n    });\n    if (reponse.ok) {\n      console.log(\"Contact added\");\n      await fetch(\"/api/contacts\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      }).then((response) => {\n        response.json().then(data => setContacts(data))\n      }).catch(err => console.log(err))\n      }\n      setFirst(\"\")\n      setSecond(\"\")\n      setNumber(\"\")\n  };\n  \n  return (\n    <Form onSubmit={handleSubmit}>\n      <p>section with * required</p>\n      <Form.Field>\n        <Form.Input\n          required\n          name=\"first\"\n          type=\"text\"\n          placeholder=\"* First Name\"\n          value={first}\n          onChange={handleInputChange}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Form.Input\n          name=\"second\"\n          type=\"text\"\n          placeholder=\"Second Name\"\n          value={second}\n          onChange={handleInputChange}\n        />\n      </Form.Field>\n      <Form.Field required>\n        <Input\n          name=\"number\"\n          type=\"tel\"\n          placeholder=\"* Phone Number\"\n          value={number}\n          onChange={handleInputChange}\n        />\n      </Form.Field>\n      <Form.Field>\n        <button style={{textAlign: \"right\"}}type=\"submit\" id=\"add_button\">\n          SUBMIT\n        </button>\n      </Form.Field>\n    </Form>\n  );\n};\n\nexport default Add;\n","import React, {useState } from \"react\";\nimport { Form } from \"semantic-ui-react\";\n\nconst Update = ({ contact,setUpdate,setContacts }) => {\n  const [newFirst, setNewFirst] = useState(contact.firstname);\n  const [newSecond, setNewSecond] = useState(contact.secondname);\n  const [newNumber, setNewNumber] = useState(contact.number);\n\n  const handleInputChange = (event) => {\n    const {\n      target: { value, name },\n    } = event;\n    if (name === \"first\") {\n      setNewFirst(value);\n    } else if (name === \"second\") {\n      setNewSecond(value);\n    } else if (name === \"number\") {\n      setNewNumber(value);\n    }\n  };\n  const handleSubmitUpdate = async (event) => {\n    event.preventDefault();\n    const updated_contact = {\n      first: newFirst,\n      second: newSecond,\n      number: newNumber,\n    };\n    const reponse = await fetch(`/api/contacts/${contact.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(updated_contact),\n    });\n    if (reponse.ok) {\n      console.log(\"Contact Updated\");\n      await fetch(`/api/contacts`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      }).then((response) => {\n        response.json().then(data => setContacts(data))\n      }).catch(err => console.log(err))\n\n      setUpdate(false)\n    }\n  };\n  return (\n    <Form onSubmit={handleSubmitUpdate}>\n      <Form.Field>\n        <input\n          name=\"first\"\n          type=\"text\"\n          placeholder=\"First Name\"\n          value={newFirst}\n          onChange={handleInputChange}\n        />\n      </Form.Field>\n      <Form.Field>\n        <input\n          name=\"second\"\n          type=\"text\"\n          placeholder=\"Second Name\"\n          value={newSecond}\n          onChange={handleInputChange}\n        />\n      </Form.Field>\n      <Form.Field>\n        <input\n          name=\"number\"\n          type=\"tel\"\n          placeholder=\"Number\"\n          value={newNumber}\n          onChange={handleInputChange}\n        />\n      </Form.Field>\n      <Form.Field>\n        <button type=\"submit\" id=\"update_submit\">\n          SUBMIT UPDATE\n        </button>\n      </Form.Field>\n    </Form>\n  );\n};\n\nexport default Update;\n","import React, { useState } from \"react\";\nimport {Container, } from \"semantic-ui-react\";\nimport Update from \"./Update\";\n\nconst Contact = ({ contact,setContacts }) => {\n  const [update, setUpdate] = useState(false);\n  const [nameClicked, setNameClicked] = useState(false);\n\n  const toggleUpdate = () => {\n    update ? setUpdate(false) : setUpdate(true);\n  };\n  const handleNameClick =() => {\n    nameClicked ? setNameClicked(false) : setNameClicked(true);\n  }\n\n  const handleDelete = async (event)=>{\n    event.preventDefault();\n    let confmsg = window.confirm('Do you want to delete this contact ?')\n    if(confmsg) {\n      const response = await fetch(`/api/contacts/${contact.id}`, {\n        method:'DELETE'\n      })\n      if (response.ok) {\n        console.log('Contact Deleted Successfully')\n        await fetch(`/api/contacts`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n        }).then((response) => {\n          response.json().then(data => setContacts(data))\n        }).catch(err => console.log(err))\n      }\n    } else {\n      return;\n    }\n  }\n  return (\n    <div>\n      {update ? (\n        <Update contact={contact} setUpdate={setUpdate} setContacts={setContacts} />\n      ) : (\n        <Container>\n\n<div onClick={handleNameClick}>\n            <h3>\n             {contact.firstname} {contact.secondname}\n            </h3>\n</div>\n  {!nameClicked? <></> :<>\n  <h3>\n    📞 {contact.number}\n  </h3>\n          <button style={{marginRight:10, marginBottom:10}} type=\"submit\" name=\"update\"onClick={toggleUpdate}>\n            UPDATE\n          </button>\n          <button  type=\"submit\" name=\"delete\" onClick={handleDelete}>DELETE\n          </button> </>}\n        </Container>\n      )}\n    </div>\n  )\n}\n\nexport default Contact;\n","import React, { useEffect, useState } from \"react\";\nimport { Grid, Header, List } from \"semantic-ui-react\";\nimport \"./App.css\";\nimport Add from \"./Components/AddForm\";\nimport Contact from \"./Components/Contact\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  // inside of useEFfect promise cause error. used fetch instead.\n  useEffect(() => {\n    fetch(\"https://contact-flask-react-app.herokuapp.com/api/contacts\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    }).then((response) =>\n      response.json().then((data) => {\n        setContacts(data);\n      })\n    ).catch((err) => {\n      console.log(err);\n    });\n  }, []);\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\"> 👥 React Contact App 📒</h1> \n      <Grid centered columns={4}>\n        <Grid.Column>\n          <Header className=\"header\" dividing> Add New Contact Here </ Header>\n          <Add style={{ margintop: 100 }} setContacts={setContacts} />\n          </Grid.Column>\n          <Grid.Column>\n      <Header className=\"header\" dividing>\n        Total Contacts: {contacts.length}</Header>\n          {contacts.map((contact) => {\n            return (           \n              <List key={contact.id}>\n                <Contact contact={contact} setContacts={setContacts}/>\n                <hr></hr>\n              </List>\n            )\n          })}\n          </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}